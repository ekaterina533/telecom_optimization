---
- name: Автоматизация Docker и проверка скрипта
  hosts: all
  become: yes
  vars:
    ansible_user: "ekaterina"
    DOCKER_USER: "{{ ansible_user }}"
    IMAGE_NAME: "http-requests"
    CONTAINER_NAME: "http-requests-container"

  tasks:
    - name: Установить зависимости
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common
        state: present
        update_cache: yes

    - name: Добавить GPG-ключ Docker
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: 0644

    - name: Добавить репозиторий Docker
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
        state: present

    - name: Обновить кэш пакетов
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Установить Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
        state: latest

    - name: Проверить версию Docker
      command: docker --version
      register: docker_version

    - name: Вывести версию Docker
      debug:
        msg: "Установлен Docker версии: {{ docker_version.stdout }}"
   
    - name: Добавить пользователя в группу docker
      user:
        name: "{{ DOCKER_USER }}"
        groups: docker
        append: yes

    - name: Перезагрузить сервис Docker
      service:
        name: docker
        state: restarted

    - name: Собрать Docker-образ
      community.docker.docker_image:
        name: "{{ IMAGE_NAME }}"
        build:
          path: ../section_2
          pull: yes
        source: build
        state: present

    - name: Запустить контейнер
      community.docker.docker_container:
        name: "{{ CONTAINER_NAME }}"
        image: "{{ IMAGE_NAME }}"
        state: started
        detach: yes

    - name: Получить логи
      command: docker logs {{ CONTAINER_NAME }}
      register: logs

    - name: Вывести логи
      debug:
        var: logs.stdout

    - name: Проверить код завершения через модуль
      community.docker.docker_container_info:
        name: "{{ CONTAINER_NAME }}"
      register: container_exit_code

    - name: Убедиться, что код завершения 0
      assert:
        that: container_exit_code.container.State.ExitCode == 0
        fail_msg: "Скрипт завершился с ошибкой (код {{ container_exit_code.container.State.ExitCode }})!"